services:
  ingress:
    image: "traefik:v3.5"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80" # Expose default web address
      - "8080:8080" # Expose Traefik Admin UI
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  echo-service:
    build:
      context: ./src/echo-service
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.echo-service.rule=PathPrefix(`/api`)" # Now routed via path
      - "traefik.http.routers.echo-service.entrypoints=web"
      - "traefik.http.services.echo-service.loadbalancer.server.port=8080"
      # Strip the /api prefix so the echo-service sees plain "/"
      - "traefik.http.middlewares.echo-strip.stripprefix.prefixes=/api"
      - "traefik.http.routers.echo-service.middlewares=echo-strip"

  homepage:
    build:
      context: ./src/homepage
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homepage.rule=PathPrefix(`/`)" # Default catch-all path
      - "traefik.http.routers.homepage.entrypoints=web"
      - "traefik.http.services.homepage.loadbalancer.server.port=80"

  # Link: https://hub.docker.com/_/postgres
  # PostgreSQL
  database:
    image: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: example

  # PostgreSQL Admin UI
  # database-ui:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8081:8080

  # Another PostgreSQL Web UI (PGWeb), sleaker and simpler to navigate (not as expressive though)
  database-ui:
    restart: always
    image: sosedoff/pgweb
    # Bypass the ingress and expose directly to localhost/loopback
    # Admin UIs are not usually exposed publicly, if deployed, and if they are they are tightly locked down
    # This is purely for development purposes, to introspect the live database
    ports:
      - "8081:8081"
    environment:
      # URL in form "postgres://<user-name>:<password>@<ip-address | domain-name>:<port>/<database>"
      - DATABASE_URL=postgres://postgres:example@database:5432/postgres?sslmode=disable
    # Don't start this before the actual database is up and running
    depends_on:
      - database
